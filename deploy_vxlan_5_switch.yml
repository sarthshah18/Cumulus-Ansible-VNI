---
- hosts: network
  become: yes
  remote_user: cumulus
  pre_tasks:
    # To prevent unexpected problems, define the minimum Cumulus Linux
    # Release supported by this demo.
    - name: Verify Minimum Software Version
      assert:
        that: "{{ansible_lsb.release | version_compare('3.0', '>=') }}"
        msg: "Cumulus Linux version must be 3.0 or later. Version {{ansible_lsb.release}} detected"

  tasks:
    - name: Enable frr Zebra
      lineinfile:
        dest: /etc/frr/daemons
        line: "zebra=yes"
        regexp: "zebra="
      notify: restart frr service

    - name: Enable frr BGP
      lineinfile:
        dest: /etc/frr/daemons
        line: "bgpd=yes"
        regexp: "bgpd="
      notify: restart frr service

    - name: Enable frr OSPF
      lineinfile:
        dest: /etc/frr/daemons
        line: "ospfd=yes"
        regexp: "ospfd="
      notify: restart frr service


    - name: Copy Interfaces File
      copy:
        src: roles/{{ansible_hostname}}/interfaces
        dest: /etc/network/interfaces
        validate: ifup -a -s -i %s
      notify: apply interface changes

    - name: Copy Routing Configuration
      copy:
        src: roles/{{ansible_hostname}}/frr.conf
        dest: /etc/frr/frr.conf
        validate: vtysh -C -f %s
      notify: apply frr config

  handlers:
    - name: restart frr service
      service:
        name: frr
        state: restarted

    - name: apply interface changes
      service:
        name: networking
        state: reloaded

    - name: apply frr config
      service:
        name: frr
        state: reloaded

- hosts: mlag-server
  become: yes
  tasks:
    - name: install ifenslave package
      apt: name={{ item }} update_cache=yes
      with_items:
       - ifenslave
    - name: Setup bonding module in Kernel
      command: modprobe bonding
    - name: copy interfaces
      copy: src=roles/{{ansible_hostname}}/interfaces dest=/etc/network/
    - name: restarts servers with their new configuration
      shell: sleep 1 && shutdown -r 0
      async: 1
      poll: 0
      ignore_errors: true
    - name: Wait for everything to come back up
      local_action:
         module: wait_for
           host="{{ inventory_hostname }}"
           port=22
           delay=10
           timeout=300



- hosts: standalone-server
  become: yes
  tasks:
    - name: copy interfaces
      copy: src=roles/{{ansible_hostname}}/interfaces dest=/etc/network/
    - name: restarts servers with their new configuration
      shell: sleep 1 && shutdown -r 0
      async: 1
      poll: 0
      ignore_errors: true
    - name: Wait for everything to come back up
      local_action:
         module: wait_for
           host="{{ inventory_hostname }}"
           port=22
           delay=10
           timeout=300
